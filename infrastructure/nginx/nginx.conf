events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging format for audit
    log_format audit_log '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        '"$http_authorization" "$request_body" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time"';

    # Access log with audit format
    access_log /var/log/nginx/access.log audit_log;
    error_log /var/log/nginx/error.log;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=banking:10m rate=20r/s;

    # Upstream definitions for microservices
    upstream client_service {
        server client-service:8080;
    }

    upstream banking_service {
        server banking-service:8081;
    }

    # Client Service API Gateway
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;

        # Client Service Routes
        location /api/v1/clients {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # Audit logging
            access_log /var/log/nginx/audit.log audit_log;
            
            # Proxy to client service
            proxy_pass http://client_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add request ID for tracing
            proxy_set_header X-Request-ID $request_id;
        }

        # Authentication endpoints (stricter rate limiting)
        location /api/v1/auth {
            limit_req zone=auth burst=10 nodelay;
            access_log /var/log/nginx/audit.log audit_log;
            
            proxy_pass http://client_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
        }

        # Banking Service Routes
        location /api/v1/banking {
            limit_req zone=banking burst=30 nodelay;
            access_log /var/log/nginx/audit.log audit_log;
            
            proxy_pass http://banking_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
        }

        # Audit endpoints (admin only)
        location /api/v1/audit {
            limit_req zone=api burst=20 nodelay;
            access_log /var/log/nginx/audit.log audit_log;
            
            proxy_pass http://banking_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
        }

        # Frontend static files
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Metrics endpoint for monitoring
        location /metrics {
            access_log off;
            proxy_pass http://banking_service/actuator/prometheus;
            proxy_set_header Host $host;
        }
    }
}
